function routes = updateRoutesCars(cars,routes,roadDecision,nodes,roads)
    
    global roadIndex;
    global nextRoadInRouteIndex; 
    global nextRoadIndex;
    global targetCar:
    
    networkMatrix = loadNetworkMatrix(roads,nodes);
    nbrCars = size(cars,1);
    
    for i = 1:nbrCars
        if roadDecision(i) == 1 && routes(i,end) ~= -1 
           route = routes(i,:);
           route(1)
           startNode = roads(cars(i,roadIndex),2);
           index = find(route == 0);
           stopNode = roads(route(index(1)-1),2);
           [route,~] = uppdateRoutes(cars,i,route,startNode,stopNode,nodes,roads,networkMatrix);
           route = route(2:end)
           route(1) = route(1)
           routes(i,:) = route;
           cars(i,nextRoadInRouteIndex) = 0;
           cars(:,nextRoadIndex) = routes(i,2);
        end
    end
    
end
    